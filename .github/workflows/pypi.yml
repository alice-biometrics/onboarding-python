name: pypi

on:
  release:
    types: [published]

env:
  TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
  TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
  PACKAGE_NAME: alice
  ONBOARDING_API_KEY: ${{ secrets.ONBOARDING_API_KEY }}
  ONBOARDING_SANDBOX_TOKEN: ${{ secrets.ONBOARDING_SANDBOX_TOKEN }}
  ALICE_GITHUB_ACCESS_TOKEN: ${{ secrets.ALICE_GITHUB_ACCESS_TOKEN }}

jobs:
  ci:
    strategy:
      max-parallel: 4
      matrix:
        os: [ macOS-latest, ubuntu-latest ]
        python-version: [3.6, 3.7, 3.8, 3.9]
    runs-on: ${{matrix.os}}
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}-${{ hashFiles('requirements.txt') }}-${{ hashFiles('dev-requirements.txt') }}
      - name: Install Requirements
        run: |
          pip install lume
          lume -install
      - name: Lint
        run: lume -lint
      - name: Test [pytest]
        run: lume -test
      - name: Example [Onboarding]
        run: python examples/onboarding.py
      - name: Example [Onboarding with Identification]
        run: python examples/onboarding_with_identification.py
      - name: Example [Onboarding with Certificate]
        run: python examples/onboarding_with_certificate.py
      - name: Example [Onboarding with Screening]
        run: python examples/onboarding_with_screening.py
      - name: Example [Auth]
        run: python examples/auth.py
      - name: Example [Sandbox]
        run: python examples/sandbox.py
  publish:
    needs: ci
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - name: Set RELEASE_VERSION
      run: echo "RELEASE_VERSION=$(echo ${GITHUB_REF:11})" >> $GITHUB_ENV
    - name: Update VERSION file
      run: echo ${RELEASE_VERSION} > ${PACKAGE_NAME}/VERSION
    - name: Install dependencies
      run: pip install setuptools wheel twine
    - name: Build and publish
      run: |
        python setup.py sdist bdist_wheel
        twine upload dist/*
    - name: Git - Add VERSION File
      run: git add ${PACKAGE_NAME}/VERSION
    - name: Git - Commit VERSION File
      run: |
        git config --global user.email "dev@alicebiometrics.com"
        git config --global user.name "ALiCE Biometrics"
        git commit -m "Update version to ${RELEASE_VERSION}"
    - name: Push changes
      uses: alice-biometrics/github-push-action@master
      with:
        github_token: ${{ secrets.ALICE_GITHUB_ACCESS_TOKEN }}
